# Language selection
language: python

# Currently commented out as set with environment flags
# Both clang and gcc can be tested. The more is the better.
#compiler:
#  - clang
#  - gcc

# Cross-operating system test
os:
#  - linux
  - osx

# Environment variables
# Note: On trusty we need to build Armadillo ourselves (the system version is too old)
matrix:
  include:
#  - os: linux
#    python: 3.5
#    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON" CC=gcc-5 CXX=g++-5
#  - os: linux
#    python: 2.7
#    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_SWIG=ON -DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON" CC=gcc-5 CXX=g++-5
#  - os: linux
#    python: 3.5
#    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON" CC=gcc-5 CXX=g++-5
#  - os: linux
#    python: 2.7
#    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_SWIG=OFF -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON" CC=gcc-5 CXX=g++-5
  - os: osx
    python: 3.5
    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON" CC=gcc CXX=g++
  - os: osx
    python: 2.7
    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_SWIG=ON -DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON" CC=gcc CXX=g++
  - os: osx
    python: 3.5
    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON"
  - os: osx
    python: 2.7
    env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_SWIG=OFF -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON" CC=gcc-5 CXX=g++-5
env:
  global:
    - BUILD_FLAGS="-DUSE_SYSTEM_Boost=ON -DCMAKE_BUILD_TYPE=Release"

    # This works on osx but we need to sort out the matrix
#    - EXTRA_BUILD_FLAGS=" -DUSE_SSYTEM_SWIG=ON -DPYTHON_LIBRARY=$(python-config --prefix)/lib/libpython2.7.dylib -DPYTHON_INCLUDE_DIR=$(python-config --prefix)/include/python2.7 " CC=clang CXX=clang++ PYVER=


# Ubuntu 14.04 LTS
dist: trusty

# No need for sudo
sudo: false

# Compilation dependencies
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - git-core
      - build-essential
      - g++-5
      - libboost-all-dev
      - libhdf5-serial-dev
      - libfftw3-dev
      - python-dev
      - python3-dev
      - liblapack-dev
      - libxml2-dev
      - libxslt-dev
      - libarmadillo-dev
      - libace-dev
      - libgtest-dev
      - libplplot-dev
      - root-system-bin
      - swig

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap homebrew/science; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - # Note: boost is already installed on osx on travis so should not be included. However, we currently need boost-python
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boost-python; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ace; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install swig; fi
  - #if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install scipy matplotlib; fi
  - # need curl to get more recent cmake
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install curl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then curl -0 https://cmake.org/files/v3.8/cmake-3.8.0-Darwin-x86_64.tar.gz -o cmake.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then curl -0 https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz -o cmake.tar.gz; fi
  - tar xzf cmake.tar.gz
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv cmake-*/CMake.app/Contents/* cmake-*; fi

install:
  - #pip install --upgrade pip setuptools wheel
  - pip install --only-binary=numpy,scipy,matplotlib numpy scipy matplotlib
  - ./cmake-*/bin/cmake $BUILD_FLAGS $EXTRA_BUILD_FLAGS .
  - make -j2
  - mv INSTALL/share/gadgetron/config/gadgetron.xml.example INSTALL/share/gadgetron/config/gadgetron.xml
  - source $PWD/INSTALL/bin/env_ccppetmr.sh
  - #env

script:
  - ./INSTALL/bin/gadgetron >& gadgetron.log&
  - ctest --verbose
  - cat SIRF-prefix/src/SIRF-build/Testing/Temporary/LastTest.log
  - # print for debugging
  - cat gadgetron.log
